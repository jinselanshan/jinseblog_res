<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinse.blog.mapper.TagTypeMapper">
	<resultMap id="BaseResultMap" type="com.jinse.blog.pojo.TagType">
		<id column="tag_type_id" property="tagTypeId" jdbcType="INTEGER" />
		<result column="tag_type_name" property="tagTypeName" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		tag_type_id, tag_type_name, url
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.jinse.blog.pojo.TagTypeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tag_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tag_type
		where tag_type_id = #{tagTypeId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tag_type
		where tag_type_id = #{tagTypeId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.jinse.blog.pojo.TagTypeExample">
		delete from tag_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.jinse.blog.pojo.TagType">
		insert into tag_type
		(tag_type_id, tag_type_name, url
		)
		values
		(#{tagTypeId,jdbcType=INTEGER}, #{tagTypeName,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.jinse.blog.pojo.TagType">
		insert into tag_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tagTypeId != null">
				tag_type_id,
			</if>
			<if test="tagTypeName != null">
				tag_type_name,
			</if>
			<if test="url != null">
				url,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tagTypeId != null">
				#{tagTypeId,jdbcType=INTEGER},
			</if>
			<if test="tagTypeName != null">
				#{tagTypeName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.jinse.blog.pojo.TagTypeExample"
		resultType="java.lang.Integer">
		select count(*) from tag_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tag_type
		<set>
			<if test="record.tagTypeId != null">
				tag_type_id = #{record.tagTypeId,jdbcType=INTEGER},
			</if>
			<if test="record.tagTypeName != null">
				tag_type_name = #{record.tagTypeName,jdbcType=VARCHAR},
			</if>
			<if test="record.url != null">
				url = #{record.url,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tag_type
		set tag_type_id = #{record.tagTypeId,jdbcType=INTEGER},
		tag_type_name = #{record.tagTypeName,jdbcType=VARCHAR},
		url =
		#{record.url,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.jinse.blog.pojo.TagType">
		update tag_type
		<set>
			<if test="tagTypeName != null">
				tag_type_name = #{tagTypeName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
		</set>
		where tag_type_id = #{tagTypeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jinse.blog.pojo.TagType">
		update tag_type
		set tag_type_name = #{tagTypeName,jdbcType=VARCHAR},
		url =
		#{url,jdbcType=VARCHAR}
		where tag_type_id =
		#{tagTypeId,jdbcType=INTEGER}
	</update>


	<resultMap id="TagTypeWithTagResult" type="com.jinse.blog.pojo.TagType"
		extends="com.jinse.blog.mapper.TagTypeMapper.BaseResultMap">
		<collection property="tagList"
			resultMap="com.jinse.blog.mapper.TagMapper.BaseResultMap" />
	</resultMap>

	<select id="findTableTagTypeList" resultMap="TagTypeWithTagResult">
		select
		tag.*,tag_type.* from tag,tag_type where tag.tag_type_id =
		tag_type.tag_type_id
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinse.blog.mapper.PictureMapper">
	<resultMap id="BaseResultMap" type="com.jinse.blog.pojo.Picture">
		<id column="picture_id" property="pictureId" jdbcType="INTEGER" />
		<result column="blog_id" property="blogId" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="INTEGER" />
		<result column="buy" property="buy" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		picture_id, blog_id, type, price, buy, url
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.jinse.blog.pojo.PictureExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from picture
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from picture
		where picture_id = #{pictureId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from picture
		where picture_id = #{pictureId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.jinse.blog.pojo.PictureExample">
		delete from picture
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.jinse.blog.pojo.Picture">
		insert into picture (picture_id, blog_id, type,
		price, buy, url)
		values (#{pictureId,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER},
		#{type,jdbcType=VARCHAR},
		#{price,jdbcType=INTEGER}, #{buy,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jinse.blog.pojo.Picture">
		insert into picture
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="pictureId != null">
				picture_id,
			</if>
			<if test="blogId != null">
				blog_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="buy != null">
				buy,
			</if>
			<if test="url != null">
				url,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="pictureId != null">
				#{pictureId,jdbcType=INTEGER},
			</if>
			<if test="blogId != null">
				#{blogId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=INTEGER},
			</if>
			<if test="buy != null">
				#{buy,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.jinse.blog.pojo.PictureExample"
		resultType="java.lang.Integer">
		select count(*) from picture
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update picture
		<set>
			<if test="record.pictureId != null">
				picture_id = #{record.pictureId,jdbcType=INTEGER},
			</if>
			<if test="record.blogId != null">
				blog_id = #{record.blogId,jdbcType=INTEGER},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=INTEGER},
			</if>
			<if test="record.buy != null">
				buy = #{record.buy,jdbcType=VARCHAR},
			</if>
			<if test="record.url != null">
				url = #{record.url,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update picture
		set picture_id = #{record.pictureId,jdbcType=INTEGER},
		blog_id = #{record.blogId,jdbcType=INTEGER},
		type = #{record.type,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=INTEGER},
		buy = #{record.buy,jdbcType=VARCHAR},
		url = #{record.url,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.jinse.blog.pojo.Picture">
		update picture
		<set>
			<if test="blogId != null">
				blog_id = #{blogId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=INTEGER},
			</if>
			<if test="buy != null">
				buy = #{buy,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
		</set>
		where picture_id = #{pictureId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jinse.blog.pojo.Picture">
		update picture
		set blog_id = #{blogId,jdbcType=INTEGER},
		type = #{type,jdbcType=VARCHAR},
		price = #{price,jdbcType=INTEGER},
		buy = #{buy,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR}
		where picture_id = #{pictureId,jdbcType=INTEGER}
	</update>


</mapper>
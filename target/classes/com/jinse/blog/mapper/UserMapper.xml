<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinse.blog.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.jinse.blog.pojo.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="following_number" property="followingNumber"
			jdbcType="INTEGER" />
		<result column="follower_number" property="followerNumber"
			jdbcType="INTEGER" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
		<result column="money" property="money" jdbcType="INTEGER" />
		<result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="VARCHAR" />
		<result column="signatur" property="signatur" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
		<result column="city_id" property="cityId" jdbcType="VARCHAR" />
		<result column="village_id" property="villageId" jdbcType="VARCHAR" />
		<result column="province_id" property="provinceId" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_id, username, password, following_number,
		follower_number, email,
		birthday,
		money, create_at, phone, gender,
		signatur, address, role_id, avatar_url,
		city_id,
		village_id,
		province_id, city
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.jinse.blog.pojo.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.jinse.blog.pojo.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.jinse.blog.pojo.User">
		insert into user (user_id,
		username, password,
		following_number, follower_number, email,
		birthday,
		money, create_at,
		phone, gender, signatur,
		address, role_id, avatar_url,
		city_id, village_id, province_id,
		city)
		values
		(#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{followingNumber,jdbcType=INTEGER},
		#{followerNumber,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP}, #{money,jdbcType=INTEGER},
		#{createAt,jdbcType=TIMESTAMP},
		#{phone,jdbcType=VARCHAR},
		#{gender,jdbcType=VARCHAR}, #{signatur,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER},
		#{avatarUrl,jdbcType=VARCHAR},
		#{cityId,jdbcType=VARCHAR},
		#{villageId,jdbcType=VARCHAR}, #{provinceId,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jinse.blog.pojo.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="followingNumber != null">
				following_number,
			</if>
			<if test="followerNumber != null">
				follower_number,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="createAt != null">
				create_at,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="signatur != null">
				signatur,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="avatarUrl != null">
				avatar_url,
			</if>
			<if test="cityId != null">
				city_id,
			</if>
			<if test="villageId != null">
				village_id,
			</if>
			<if test="provinceId != null">
				province_id,
			</if>
			<if test="city != null">
				city,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="followingNumber != null">
				#{followingNumber,jdbcType=INTEGER},
			</if>
			<if test="followerNumber != null">
				#{followerNumber,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="money != null">
				#{money,jdbcType=INTEGER},
			</if>
			<if test="createAt != null">
				#{createAt,jdbcType=TIMESTAMP},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=VARCHAR},
			</if>
			<if test="signatur != null">
				#{signatur,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="avatarUrl != null">
				#{avatarUrl,jdbcType=VARCHAR},
			</if>
			<if test="cityId != null">
				#{cityId,jdbcType=VARCHAR},
			</if>
			<if test="villageId != null">
				#{villageId,jdbcType=VARCHAR},
			</if>
			<if test="provinceId != null">
				#{provinceId,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.jinse.blog.pojo.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.followingNumber != null">
				following_number =
				#{record.followingNumber,jdbcType=INTEGER},
			</if>
			<if test="record.followerNumber != null">
				follower_number =
				#{record.followerNumber,jdbcType=INTEGER},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=INTEGER},
			</if>
			<if test="record.createAt != null">
				create_at = #{record.createAt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=VARCHAR},
			</if>
			<if test="record.signatur != null">
				signatur = #{record.signatur,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=INTEGER},
			</if>
			<if test="record.avatarUrl != null">
				avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.cityId != null">
				city_id = #{record.cityId,jdbcType=VARCHAR},
			</if>
			<if test="record.villageId != null">
				village_id = #{record.villageId,jdbcType=VARCHAR},
			</if>
			<if test="record.provinceId != null">
				province_id = #{record.provinceId,jdbcType=VARCHAR},
			</if>
			<if test="record.city != null">
				city = #{record.city,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set user_id = #{record.userId,jdbcType=INTEGER},
		username =
		#{record.username,jdbcType=VARCHAR},
		password =
		#{record.password,jdbcType=VARCHAR},
		following_number =
		#{record.followingNumber,jdbcType=INTEGER},
		follower_number =
		#{record.followerNumber,jdbcType=INTEGER},
		email =
		#{record.email,jdbcType=VARCHAR},
		birthday =
		#{record.birthday,jdbcType=TIMESTAMP},
		money =
		#{record.money,jdbcType=INTEGER},
		create_at =
		#{record.createAt,jdbcType=TIMESTAMP},
		phone =
		#{record.phone,jdbcType=VARCHAR},
		gender =
		#{record.gender,jdbcType=VARCHAR},
		signatur =
		#{record.signatur,jdbcType=VARCHAR},
		address =
		#{record.address,jdbcType=VARCHAR},
		role_id =
		#{record.roleId,jdbcType=INTEGER},
		avatar_url =
		#{record.avatarUrl,jdbcType=VARCHAR},
		city_id =
		#{record.cityId,jdbcType=VARCHAR},
		village_id =
		#{record.villageId,jdbcType=VARCHAR},
		province_id =
		#{record.provinceId,jdbcType=VARCHAR},
		city =
		#{record.city,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.jinse.blog.pojo.User">
		update user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="followingNumber != null">
				following_number = #{followingNumber,jdbcType=INTEGER},
			</if>
			<if test="followerNumber != null">
				follower_number = #{followerNumber,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=INTEGER},
			</if>
			<if test="createAt != null">
				create_at = #{createAt,jdbcType=TIMESTAMP},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="signatur != null">
				signatur = #{signatur,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="avatarUrl != null">
				avatar_url = #{avatarUrl,jdbcType=VARCHAR},
			</if>
			<if test="cityId != null">
				city_id = #{cityId,jdbcType=VARCHAR},
			</if>
			<if test="villageId != null">
				village_id = #{villageId,jdbcType=VARCHAR},
			</if>
			<if test="provinceId != null">
				province_id = #{provinceId,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jinse.blog.pojo.User">
		update user
		set
		username = #{username,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		following_number =
		#{followingNumber,jdbcType=INTEGER},
		follower_number =
		#{followerNumber,jdbcType=INTEGER},
		email = #{email,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		money =
		#{money,jdbcType=INTEGER},
		create_at = #{createAt,jdbcType=TIMESTAMP},
		phone = #{phone,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=VARCHAR},
		signatur = #{signatur,jdbcType=VARCHAR},
		address =
		#{address,jdbcType=VARCHAR},
		role_id = #{roleId,jdbcType=INTEGER},
		avatar_url = #{avatarUrl,jdbcType=VARCHAR},
		city_id =
		#{cityId,jdbcType=VARCHAR},
		village_id = #{villageId,jdbcType=VARCHAR},
		province_id = #{provinceId,jdbcType=VARCHAR},
		city =
		#{city,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>

	<select id="findByUser" resultMap="BaseResultMap" parameterType="com.jinse.blog.pojo.User">
		select * from user where username = #{username} and
		password =
		#{password}
	</select>

	<select id="findUserByUsername" resultMap="BaseResultMap"
		parameterType="string">
		select * from user where username = #{username}
	</select>

	<update id="updateAvatarUrlByUserId" parameterType="com.jinse.blog.pojo.User">
		update user
		set avatar_url = #{avatarUrl,jdbcType=VARCHAR} where user_id =
		#{userId,jdbcType=INTEGER}
	</update>

	<update id="addUserFollowingByUserId" parameterType="java.lang.Integer">
		update user
		set following_number = following_number + 1 where user_id =
		#{userId,jdbcType=INTEGER}
	</update>
	<update id="addUserFollowerByUserId" parameterType="java.lang.Integer">
		update user
		set follower_number = follower_number + 1 where user_id =
		#{followingId,jdbcType=INTEGER}
	</update>
	<update id="minusUserFollowingByUserId" parameterType="java.lang.Integer">
		update
		user
		set following_number = following_number - 1 where user_id =
		#{userId,jdbcType=INTEGER} and following_number > 0
	</update>
	<update id="minusUserFollowerByUserId" parameterType="java.lang.Integer">
		update user
		set follower_number = follower_number - 1 where user_id =
		#{followingId,jdbcType=INTEGER} and follower_number > 0
	</update>

	<insert id="insertUser" useGeneratedKeys="true" keyProperty="userId"
		parameterType="com.jinse.blog.pojo.User">
		insert into user (user_id,
		username, password,
		following_number, follower_number, email,
		birthday,
		money, create_at,
		phone, gender, signatur,
		address, role_id, avatar_url,
		city_id,
		village_id, province_id
		)
		values (#{userId,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{followingNumber,jdbcType=INTEGER},
		#{followerNumber,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP}, #{money,jdbcType=INTEGER},
		#{createAt,jdbcType=TIMESTAMP},
		#{phone,jdbcType=VARCHAR},
		#{gender,jdbcType=VARCHAR}, #{signatur,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER},
		#{avatarUrl,jdbcType=VARCHAR},
		#{cityId,jdbcType=VARCHAR},
		#{villageId,jdbcType=VARCHAR}, #{provinceId,jdbcType=VARCHAR}
		)
	</insert>


	<select id="findAllFollowing" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT u.* from user u where user_id !=
		#{userId,jdbcType=INTEGER} and user_id
		in (SELECT uf.following_id from
		user_following uf WHERE uf.user_id =
		#{userId,jdbcType=INTEGER})
	</select>
	
	<select id="findUserListByUsername" resultMap="BaseResultMap"
		parameterType="string">
		select * from user where username like "%"#{username}"%"
	</select>

</mapper>
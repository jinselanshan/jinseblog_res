<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinse.blog.mapper.ProvinceMapper">
	<resultMap id="BaseResultMap" type="com.jinse.blog.pojo.Province">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="my_texts" property="myTexts" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="my_tables" property="myTables" jdbcType="VARCHAR" />
		<result column="my_colums" property="myColums" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_at" property="createAt" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="update_at" property="updateAt" jdbcType="VARCHAR" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, my_texts, parent_id, my_tables, my_colums, sort,
		remark, create_at,
		create_by,
		update_at, update_by
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.jinse.blog.pojo.ProvinceExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from province
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from province
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		province
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.jinse.blog.pojo.ProvinceExample">
		delete from province
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.jinse.blog.pojo.Province">
		insert into province (id,
		my_texts, parent_id,
		my_tables, my_colums, sort,
		remark, create_at,
		create_by,
		update_at, update_by)
		values (#{id,jdbcType=VARCHAR},
		#{myTexts,jdbcType=VARCHAR},
		#{parentId,jdbcType=VARCHAR},
		#{myTables,jdbcType=VARCHAR}, #{myColums,jdbcType=VARCHAR},
		#{sort,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{createAt,jdbcType=VARCHAR},
		#{createBy,jdbcType=VARCHAR},
		#{updateAt,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jinse.blog.pojo.Province">
		insert into province
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="myTexts != null">
				my_texts,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="myTables != null">
				my_tables,
			</if>
			<if test="myColums != null">
				my_colums,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createAt != null">
				create_at,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="updateAt != null">
				update_at,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="myTexts != null">
				#{myTexts,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=VARCHAR},
			</if>
			<if test="myTables != null">
				#{myTables,jdbcType=VARCHAR},
			</if>
			<if test="myColums != null">
				#{myColums,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createAt != null">
				#{createAt,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="updateAt != null">
				#{updateAt,jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.jinse.blog.pojo.ProvinceExample"
		resultType="java.lang.Integer">
		select count(*) from province
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update province
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.myTexts != null">
				my_texts = #{record.myTexts,jdbcType=VARCHAR},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=VARCHAR},
			</if>
			<if test="record.myTables != null">
				my_tables = #{record.myTables,jdbcType=VARCHAR},
			</if>
			<if test="record.myColums != null">
				my_colums = #{record.myColums,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.createAt != null">
				create_at = #{record.createAt,jdbcType=VARCHAR},
			</if>
			<if test="record.createBy != null">
				create_by = #{record.createBy,jdbcType=VARCHAR},
			</if>
			<if test="record.updateAt != null">
				update_at = #{record.updateAt,jdbcType=VARCHAR},
			</if>
			<if test="record.updateBy != null">
				update_by = #{record.updateBy,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update province
		set id = #{record.id,jdbcType=VARCHAR},
		my_texts =
		#{record.myTexts,jdbcType=VARCHAR},
		parent_id =
		#{record.parentId,jdbcType=VARCHAR},
		my_tables =
		#{record.myTables,jdbcType=VARCHAR},
		my_colums =
		#{record.myColums,jdbcType=VARCHAR},
		sort =
		#{record.sort,jdbcType=VARCHAR},
		remark =
		#{record.remark,jdbcType=VARCHAR},
		create_at =
		#{record.createAt,jdbcType=VARCHAR},
		create_by =
		#{record.createBy,jdbcType=VARCHAR},
		update_at =
		#{record.updateAt,jdbcType=VARCHAR},
		update_by =
		#{record.updateBy,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.jinse.blog.pojo.Province">
		update province
		<set>
			<if test="myTexts != null">
				my_texts = #{myTexts,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=VARCHAR},
			</if>
			<if test="myTables != null">
				my_tables = #{myTables,jdbcType=VARCHAR},
			</if>
			<if test="myColums != null">
				my_colums = #{myColums,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createAt != null">
				create_at = #{createAt,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="updateAt != null">
				update_at = #{updateAt,jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jinse.blog.pojo.Province">
		update province
		set my_texts = #{myTexts,jdbcType=VARCHAR},
		parent_id =
		#{parentId,jdbcType=VARCHAR},
		my_tables = #{myTables,jdbcType=VARCHAR},
		my_colums = #{myColums,jdbcType=VARCHAR},
		sort =
		#{sort,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		create_at = #{createAt,jdbcType=VARCHAR},
		create_by =
		#{createBy,jdbcType=VARCHAR},
		update_at = #{updateAt,jdbcType=VARCHAR},
		update_by = #{updateBy,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=VARCHAR}
	</update>

	<select id="findAddressByParentIdAndMyColums" resultMap="BaseResultMap"
		parameterType="com.jinse.blog.pojo.Province">
		select * from province where parent_id =
		#{parentId,jdbcType=VARCHAR} and
		my_colums =
		#{myColums,jdbcType=VARCHAR}
	</select>

	<resultMap id="ProvinceWithParentResult" type="com.jinse.blog.pojo.Province">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="my_texts" property="myTexts" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="my_tables" property="myTables" jdbcType="VARCHAR" />
		<result column="my_colums" property="myColums" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="create_at" property="createAt" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="update_at" property="updateAt" jdbcType="VARCHAR" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
	 <association property="parent" javaType="com.jinse.blog.pojo.Province" select="selectProIdList" column="parent_id"/>
	</resultMap>
	
	<select id="selectProIdList" resultMap="ProvinceWithParentResult"
		parameterType="java.lang.String">
		select * from province where id = #{cityId,jdbcType=INTEGER}
	</select>
	<select id="selectCityNameById" resultType="java.lang.String"
		parameterType="java.lang.String">
		select my_texts from province where id = #{id,jdbcType=INTEGER}
	</select>
</mapper>